os.pullEvent = os.pullEventRaw

--ik this isn't needed, but I hate putting the desktop env in startup.
deltaOS = true
--for programs who would like to know that is deltaOS or not installed


version = "PERSIAN"


os.loadAPI("/apis/delta")
os.loadAPI("/apis/kernel")
os.loadAPI("/apis/graphics")


local function loadDeltaOS()

os.loadAPI("/apis/users")
local tApis = fs.list( "/apis" )
for k, v in pairs( tApis ) do
 if not fs.isDir(v) then
  os.loadAPI("/apis/"..v)
 end
end


if fs.exists("/system/.setup_trigger") then
 shell.run("/ft-setup.lua")
 fs.delete("system/.setup_trigger")
end



http.request("http://deltaos.netii.com/ip.php")

local requesting = true

while requesting do
  local event, url, sourceText = os.pullEvent()
  
  if event == "http_success" then
    local respondedText = sourceText.readAll()
    
    sourceText.close()
    if respondedText == "208.111.31.84" then
     delta.bsod("Ip blocked.", "err")
     error()
    end
    
    requesting = false
  elseif event == "http_failure" then
    --print("Server didn't respond.")
    
    requesting = false
  end
end
 

graphics.reset(colors.lightBlue, colors.black)
graphics.drawLine(1, colors.lightGray)
graphics.drawLine(kernel.y, colors.lightGray)
term.setBackgroundColor(colors.lightBlue)
term.setCursorPos(1, 2)


graphics.cPrint("DeltaOS")

graphics.drawImage("/system/logo.nfp", kernel.x/2-11/2, 4)

term.setBackgroundColor(colors.lightBlue)

--[[
local data = http.get("https://raw.githubusercontent.com/FlareHAX0R/deltaOS/master/version")

if data:readAll() ~= version then
 term.setCursorPos(1, kernel.y/2+1)
 graphics.cPrint("Updating...")
 sleep(0.5)
 shell.run("/system/update")
 os.reboot()
end
]]--

if storage.totalKB() <= 10 then
 term.setCursorPos(1, kernel.y/2+1)
 term.clearLine()
 graphics.cPrint(":( We detected that you are low on storage space.")
 graphics.cPrint("You have "..tostring(storage.totalKB()).." KB left.")
end
sleep(1.5)



shell.run("/system/desktop.lua")
end


local err = kernel.catnip(loadDeltaOS)
if err ~= "noErr" then
 delta.bsod(err)
end


